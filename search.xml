<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Hexo搭建</title>
      <link href="/2020/03/01/Hexo%E6%90%AD%E5%BB%BA/"/>
      <url>/2020/03/01/Hexo%E6%90%AD%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[<h2 id="搭建流程">搭建流程</h2><ol><li><p>安装git、Node.Js和Hexo</p></li><li><p>创建github个人仓库</p></li><li><p>为个人仓库添加SSH keys</p></li><li><p>部署hexo到github仓库</p></li><li><p>设置个人域名</p></li><li><p>发布文章</p></li></ol><a id="more"></a><h2 id="安装git、Node-Js和Hexo">安装git、Node.Js和Hexo</h2><h3 id="1-安装git">1.安装git</h3><p><btn regular><a href="https://git-scm.com/download" target="_blank" rel="noopener"><i class='fas fa-download'></i> 下载地址</a></btn></p><p>安装最后一步添加路径时选择<code>Use Git from the Windows Command Prompt</code>，这样可以直接在命令提示符里使用<code>git</code>命令</p><div class="info"><p>安装完成后在命令提示符里输入<code>git --version</code>检查是否安装成功</p></div><h3 id="2-安装Node-Js">2.安装Node.Js</h3><p><code>hexo</code>基于<code>node.js</code>编写，需要先安装<code>node.js</code>和里面的<code>npm</code>工具</p><p>下载最新安装包进行安装：<btn regular><a href="http://nodejs.cn/download/" target="_blank" rel="noopener"><i class='fas fa-download'></i> 下载地址</a></btn></p><div class="info"><p>安装完成后在命令提示符里输入<code>node -v</code>和<code>npm -v</code>检查是否安装成功</p></div><h3 id="3-安装Hexo">3.安装Hexo</h3><p>安装完git和node.js后就可以安装hexo了。在电脑上创建一个空文件夹如HexoBlog，用来存放博客文件；在这个目录下右键git bash here打开命令窗口</p><p>在命令窗输入npm install -g hexo-cli安装hexo，中途可能会有报错信息，可以无视。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><p>安装完输入hexo -v检查是否安装成功</p><p>至此hexo环境搭建完成，接下来初始化hexo，需要在HexoBlog的上层目录执行以下命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init HexoBlog</span><br></pre></td></tr></table></figure><p>输入npm install安装必备组件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install</span><br></pre></td></tr></table></figure><div class="info"><p>如果初始化后目录下已经产生node_modules文件夹，则可以不用执行</p></div><p>新建完成后，博客目录HexoBlog下有以下文件夹：</p><ul><li>node_modules：组件包</li><li>public：存放生成的网页文件</li><li>scaffolds：生成文章的一些模板</li><li>source：存放文章</li><li>themes：博客主题文件</li><li>_config.yml：博客配置文件</li></ul><h2 id="创建github个人仓库">创建github个人仓库</h2><p>注册一个<btn><a href="https://github.com/" target="_blank" rel="noopener">github</a></btn>账号，注册完新建一个<code>repository</code>用于存放网站静态文件。</p><p><img src="https://cdn.jsdelivr.net/gh/wanouing/cdn-assets@master/img/2020/NewRepository.png" alt=""></p><div class="info"><p>仓库名须和用户名完全一致，后缀为<code>.github.io</code>，库的私密性要设置为<code>public</code></p></div><h2 id="添加SSH-keys">添加SSH keys</h2><p>添加<code>SSH</code>到<code>github</code>，用于连接<code>github</code>与本地<br>右键git bash here，打开命令窗口，输入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name <span class="string">"name"</span></span><br><span class="line">git config --global user.email <span class="string">"email"</span></span><br></pre></td></tr></table></figure><p><code>name</code>输入自己的<code>github</code>用户名，<code>email</code>输入<code>github</code>邮箱，这样<code>github</code>才能对应相应的账户信息。<br>可以通过以下命令，检查是否输入正确：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config user.name</span><br><span class="line">git config user.email</span><br></pre></td></tr></table></figure><p>无误后通过以下命令创建<code>SSH</code>，一路回车即可</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">"email"</span></span><br></pre></td></tr></table></figure><p>命令会生成<code>.ssh</code>文件夹，在电脑用户文件夹内；打开<code>id_rsa.pub</code>文件，复制其中内容。<br>打开<btn><a href="https://github.com/" target="_blank" rel="noopener">github</a></btn>网站，点击<code>settings</code>，点击<code>SSH and GPG keys</code>，新建一个<code>SSH keys</code>，<code>title</code>内容自定即可，<code>Key</code>内填入公钥，即<code>id_rsa.pub</code>里的内容<br>在<code>git bash</code>里输入<code>ssh -T git@github.com</code> ，如果出现自己的用户名，表示设置成功。<br><img src="https://cdn.jsdelivr.net/gh/wanouing/cdn-assets@master/img/2020/SSH.png" alt=""></p><div class="info"><p>SSH通过密钥对进行连接，id_rsa为私人密钥，不能泄露；id_rsa.pub是公共密钥，可以随便给人看。公钥放置在github上，任何人都可访问，但只有配对的私钥才能连接</p></div><h2 id="部署hexo到github">部署hexo到github</h2><p>将<code>hexo</code>与<code>github</code>关联起来，用来部署<code>hexo</code>文章到<code>github</code>，打开博客<strong>根目录</strong>下的配置文件<code>_config.yml</code>，这里可以修改与博客配置相关的各种信息，注意备份。<br>修改最后一行的配置：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  <span class="built_in">type</span>: git</span><br><span class="line">  repository: https://github.com/wanouing/wanouing.github.io/</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><p><code>repository</code>修改为自己的项目仓库，部署时，工具将通过<code>git</code>方式上传网页文件到对应仓库<br>使用前需要提前安装<code>deploy-git</code>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><div class="info"><p>使用deploy部署时可能需要输入github的username和password</p></div><h2 id="设置个人域名">设置个人域名</h2><p><code>github</code>的默认域名为<code>name.github.io</code>且不能修改，可自己设置个人域名，但需提前购买域名。<br>进入域名解析设置，添加一条CNAME记录：<br><img src="https://cdn.jsdelivr.net/gh/wanouing/cdn-assets@master/img/2020/domain.png" alt=""><br>打开<code>github</code>博客仓库，点击<code>settings</code>（是仓库的<code>settings</code>不是网站的<code>settings</code>），在<code>Custom domain</code>下填写自己的个人域名，保存<br>这时，项目根目录下应该会生成一个名为<code>CNAME</code>的文件，如果没有就新建一个<code>CNAME</code>文件（一定要大写），内容添加自己的域名信息</p><h2 id="发布文章">发布文章</h2><p>在博客根目录下右键<code>git bash here</code>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new post <span class="string">"article title"</span>//新建文章</span><br></pre></td></tr></table></figure><p>常用<code>hexo</code>命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean//清除生成的静态文件 </span><br><span class="line">hexo generate//生成静态文件 可用 hexo g 缩写</span><br><span class="line">hexo deploy//部署文件到github 可用 hexo d 缩写</span><br></pre></td></tr></table></figure><p>git add .</p><p>git commit -am  ‘del’</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Google Cloud Platform SSH 连接配置</title>
      <link href="/2019/11/16/Google%20Cloud%20Platform%20SSH%20%E8%BF%9E%E6%8E%A5%E9%85%8D%E7%BD%AE/"/>
      <url>/2019/11/16/Google%20Cloud%20Platform%20SSH%20%E8%BF%9E%E6%8E%A5%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h2 id="通过密钥对连接">通过密钥对连接</h2><h3 id="1-在实例服务器上生成私钥和公钥">1.在实例服务器上生成私钥和公钥</h3><a id="more"></a><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> ~/.ssh                     <span class="comment"># 进入当前用户主目录下的`.ssh`文件夹</span></span><br><span class="line">$ ssh-keygen -f myKey           <span class="comment">#密钥文件名myKey可自定义</span></span><br><span class="line">Generating public/private rsa key pair.</span><br><span class="line">Enter passphrase (empty <span class="keyword">for</span> no passphrase): (给 private key 设置一个密码，避免私钥被人盗用的风险)</span><br><span class="line">Enter same passphrase again: (再次输入上次相同密码)</span><br><span class="line">Your identification has been saved <span class="keyword">in</span> myKey.</span><br><span class="line">Your public key has been saved <span class="keyword">in</span> myKey.pub.</span><br><span class="line">The key fingerprint is:</span><br><span class="line">SHA256:EW7ow1wCKAh1rM/GG08ZAwOy+7+SUiT0rFXY2f8mNvk user@computer-name.local</span><br><span class="line">The key<span class="string">'s randomart image is:</span></span><br><span class="line"><span class="string">+---[RSA 2048]----+</span></span><br><span class="line"><span class="string">|=.o+= o .        |</span></span><br><span class="line"><span class="string">|o+.o+= + .       |</span></span><br><span class="line"><span class="string">|o.o..oo *        |</span></span><br><span class="line"><span class="string">|..o+ +o+ o       |</span></span><br><span class="line"><span class="string">|.oo+  =+S o      |</span></span><br><span class="line"><span class="string">| o. * o. = o     |</span></span><br><span class="line"><span class="string">| ..o =  . =      |</span></span><br><span class="line"><span class="string">|. o.. .    E     |</span></span><br><span class="line"><span class="string">| . .o.           |</span></span><br><span class="line"><span class="string">+----[SHA256]-----+</span></span><br><span class="line"><span class="string"># 此时会生成 公钥 myKey.pub 和 私钥 myKey</span></span><br></pre></td></tr></table></figure><h3 id="2-复制公钥">2.复制公钥</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ cat myKey.pub</span><br><span class="line">ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCjHKPaeglRVJzAhNq+W</span><br><span class="line">中间部分省略。。。</span><br><span class="line">dKx8sJ0Rw4kUqm2eU2vo8S5IEA0Nk2f7BtVGE8VOCHgmDbv2tLp9845UVp1 user@computer-name.local</span><br><span class="line"><span class="comment"># 把这长长的一段复制下来，把其中的 user@computer-name.local 改为你在浏览器 SSH 登入之后的当前用户名 $&#123;whoami&#125;</span></span><br></pre></td></tr></table></figure><h3 id="3-导入公钥到谷歌云实例">3.导入公钥到谷歌云实例</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 进入谷歌云平台页面 -&gt; 计算引擎 -&gt; 元数据 -&gt; SSH 密钥，粘贴保存</span></span><br><span class="line"><span class="comment"># 谷歌就会把上面这段 public key 写入到对应用户 ~/.ssh/authorized_keys</span></span><br></pre></td></tr></table></figure><h3 id="4-本地通过私钥登录">4.本地通过私钥登录</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">$ ssh -i myKey user@xxx.xxx.xxx.xxx</span><br><span class="line">Enter passphrase <span class="keyword">for</span> key <span class="string">'myKey'</span>: (输入 private key 密码)</span><br><span class="line">Welcome to Ubuntu 16.04.2 LTS (GNU/Linux 4.11.2-041102-generic x86_64)</span><br><span class="line"></span><br><span class="line"> * Documentation:  https://help.ubuntu.com</span><br><span class="line"> * Management:     https://landscape.canonical.com</span><br><span class="line"> * Support:        https://ubuntu.com/advantage</span><br><span class="line"></span><br><span class="line">  Get cloud support with Ubuntu Advantage Cloud Guest:</span><br><span class="line">    http://www.ubuntu.com/business/services/cloud</span><br><span class="line"></span><br><span class="line">83 packages can be updated.</span><br><span class="line">0 updates are security updates.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Last login: Sun Oct  8 06:40:43 2017 from 115.200.175.117</span><br></pre></td></tr></table></figure><h2 id="通过密码验证连接">通过密码验证连接</h2><h3 id="1-为实例用户创建新密码">1.为实例用户创建新密码</h3><ol><li><p>创建实例后设置当前用户的新密码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ sudo passwd <span class="variable">$&#123;whoami&#125;</span> // 下面以 user 代替 <span class="variable">$&#123;whoami&#125;</span></span><br><span class="line"><span class="comment"># 输入新密码</span></span><br></pre></td></tr></table></figure></li><li><p>随便设置下root的新密码（可选）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ sudo passwd root</span><br><span class="line"><span class="comment"># 输入新密码</span></span><br></pre></td></tr></table></figure></li></ol><h3 id="2-密码验证登录">2.密码验证登录</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">$ ssh user@xxx.xxx.xxx.xxx</span><br><span class="line">Permission denied (publickey).</span><br><span class="line"></span><br><span class="line"><span class="comment"># 之所以会出现这种情况，因为谷歌默认把密码验证登录关了，需要自行打开</span></span><br><span class="line">$ sudo vi /etc/ssh/sshd_config</span><br><span class="line">PasswordAuthentication yes </span><br><span class="line">:wq!</span><br><span class="line"></span><br><span class="line"><span class="comment"># 改完要重启 ssh 服务</span></span><br><span class="line">$ sudo service sshd restart</span><br><span class="line"></span><br><span class="line"><span class="comment"># 再次连接</span></span><br><span class="line">$ ssh user@xxx.xxx.xxx.xxx</span><br><span class="line">user@xxx.xxx.xxx.xxx<span class="string">'s password: (输入实例用户的密码)</span></span><br><span class="line"><span class="string">Welcome to Ubuntu 16.04.2 LTS (GNU/Linux 4.11.2-041102-generic x86_64)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"> * Documentation:  https://help.ubuntu.com</span></span><br><span class="line"><span class="string"> * Management:     https://landscape.canonical.com</span></span><br><span class="line"><span class="string"> * Support:        https://ubuntu.com/advantage</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  Get cloud support with Ubuntu Advantage Cloud Guest:</span></span><br><span class="line"><span class="string">    http://www.ubuntu.com/business/services/cloud</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">83 packages can be updated.</span></span><br><span class="line"><span class="string">0 updates are security updates.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Last login: Sun Oct  8 06:59:24 2017 from 115.200.175.117</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># 至此大功告成</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 谷歌云 </tag>
            
            <tag> SSH </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>冲击响应谱（SRS）</title>
      <link href="/2019/07/07/%E5%86%B2%E5%87%BB%E5%93%8D%E5%BA%94%E8%B0%B1%EF%BC%88SRS%EF%BC%89/"/>
      <url>/2019/07/07/%E5%86%B2%E5%87%BB%E5%93%8D%E5%BA%94%E8%B0%B1%EF%BC%88SRS%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<p>冲击响应谱是一个基于频率的函数，用于指示冲击或瞬态过程的振动幅值。冲击响应谱可以量化各式各样的瞬态振动过程：地震过程、爆破事件、弹道冲击（图1）等等。</p><p>图1 海军舰船冲击测试</p><a id="more"></a><p>例如，一艘舰船经受来自附近爆炸的瞬态振动，此时在冲击过程中，就可以测量和捕捉舰船关键部分的冲击响应谱。通过测量的冲击响应谱，实验室内可重现关键部件所承受的瞬态冲击振动，从而保证其能承受实际的冲击工况。</p><h2 id="1-什么是冲击响应谱">1.什么是冲击响应谱</h2><p>冲击响应谱的幅值是一系列单自由度质量-弹簧系统承受冲击或瞬态振动时的峰值响应，其横轴为单自由度系统的固有频率，如图2所示</p><p>图2 冲击响应谱绘制过程</p><p>历史上曾使用真实的质量-弹簧系统来测量冲击响应谱，然而如今，单自由度系统响应通常由测量或预测的加速度数据经计算机虚拟计算得到。</p><p>冲击响应谱的计算过程如下：</p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
